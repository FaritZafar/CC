%{

    #define _GNU_SOURCE
	#define T_INT 10
	#define T_CHAR 20
	#define T_FLOAT 30
	#define T_DOUBLE 40
	#define T_FUNCTION 50
	#define T_CONST 60
	#define TRUE 1
	#define FALSE 0
    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>

    /*Data structures for links in symbol lookahead*/
    struct symrec{
        char *name;             //Symbol name
        int type;               //Symbol type
        double value;           //Variable lookahead value
		int data_type;
        int function;           //Function
		int is_const;
        struct symrec *next;    //Next register pointer
    };

    typedef struct symrec symrec;

    /*Symbol table*/
    extern symrec *sym_table;

    /*Symbol table interactions*/
    symrec *putsym ();
    symrec *getsym ();

    extern int yylex(void);
    extern FILE *yyin;      //Source file to be translated
    extern char *yytext;    //Recognizes input tokens
    extern int line_number; //Line number
	extern char *get_type(int type);
	extern int check_const_var(char *name);
	extern int check_type_op(char *name1, char *name2, char op);

    FILE *yy_output;        //Object file
    
    symrec *sym_table = (symrec *)0;
    symrec *s;
    symrec *symtable_set_type;
    
    int yyerror(char *s);       //Error function

    int is_function=0;          //Is a function (flag)
	int is_switch = FALSE;
	int dimension = 0;
    int error=0;                //Error flag
    int global = 0;             //Global var falg
    int ind = 0;                //Indentation
	int current_type;
	int current_op;
	char type_aux[100];
    //int function_definition = 0;//Funcion definition flag

    /*Creates an indentation*/
    void indent(){
        int temp_ind = ind;
        while (temp_ind > 0){
            fprintf(yy_output, "\t");
            temp_ind -= 1;
        }
    }

    void print(char *token) {
        fprintf(yy_output,token);
    }

%}

%union
{
	int type;
	double value;
	char *name;
	int data_type;
	struct symrec *tptr;
}

